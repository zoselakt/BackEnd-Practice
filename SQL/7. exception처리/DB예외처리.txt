sql 예외처리
1) 컴파일 에러(Compilation Error)

 - PL/SQL 블록을 Parsing, 컴파일 하는동안 문법적인 오류로 발생 하는 동안 발생하는 에러

2) 런타임 에러 (Run-Time Error)
 - PL/SQL 블록을 실행하는 도중 발생하는 에러, 이를 Exception이라고 한다.
 - 즉 오라클에서는 런타임 에러를 예외(Exception)라고 부른다. 이 예외 처리에 대해 오늘은 정리해 보려고 한다.
 - 일반적인 SQL에서는 에러가 발생했을 때 처리할 수 있는 방법이 없지만, PL/SQL에서는 예외 발생 시 이를 처리(Handling)할 수 있는 예외 처리(Exception Handling)를 지원한다.
 
 함수나 프로시저 같은 PL/SQL 수행 시 숫자만 들어올 수 있는 컬럼에 문자를 넣는다거나 0으로 나눈다거나, 컬럼 사이즈보다 큰 값을 넣을 경우 등의
에러가 발생할 경우 EXCEPTION을 작성해 두면 에러가 발생하지 않고 EXCEPTION으로 빠지면서 설정한 쿼리를 수행하게 된다
EXCEPTION의 위치는 PL/SQL을 수행하는 BEGIN ~ END; 라인에서 END 바로 위에 작성하게 되는데
 
사용법
DECLARE
    -- 예외선언
    -- 예외 이름 EXCEPTION;
BEGIN
    -- 예외 발생
    -- RAISE 예외 이름;

EXCEPTION
WHEN 예외1(사전 정의된 오류 또는 사용자 정의 오류) THEN
    STATEMENT1 ...
WHEN 예외2(사전 정의된 오류 또는 사용자 정의 오류) THEN
    STATEMENT2 ...
WHEN OTHERS THEN
    STATEMENT3 ...
END;


예제)
DECLARE
    넘버변수 NUMBER(10);
    출력변수 NUMBER(10);
BEGIN
    넘버변수 := 10;
    출력변수 := 넘버변수 / 0;
    DBMS_OUTPUT.PUT_LINE(넘버변수);
    DBMS_OUTPUT.PUT_LINE(출력변수);
    
    EXCEPTION
    WHEN ZERO_DIVIDE THEN
    	출력변수 := 0;
    	DBMS_OUTPUT.PUT_LINE('0으로 나눌 수 없습니다. 기본앖 0으로 치환 합니다.');
END;

예제2)
create or replace
PROCEDURE CUSTOM_PROC(
  NUM IN NUMBER, -- 가지고 들어올 파라미터
  OUT_MSG OUT VARCHAR2 -- 가지고 나갈 파라미터
)
IS
  NUM_CHECKER EXCEPTION; -- EXCEPTION 선언
BEGIN -- PL/SQL, EXCEPTION
  IF NUM > 10 THEN -- EXCEPTION 조건 설정
    RAISE NUM_CHECKER; -- EXCEPTION 호출
  END IF;
  
  RAISE NO_DATA_FOUND; -- OTHERS 확인용 호출
  
  EXCEPTION
    WHEN NUM_CHECKER THEN -- EXCEPTION 조건에 맞을 경우
      BEGIN
        OUT_MSG := '10이 넘어갑니다!';
        RETURN; -- RETURN이 없을 경우 쿼리를 계속 수행함
      END;
    WHEN OTHERS THEN  -- OHTER은 조건에 맞는 경우가 없을 경우
      BEGIN
        OUT_MSG := 'OHTER 확인용!';
      END;
      
  OUT_MSG := '프로시저 수행 완료!';
END;

예외종류)
ACCESS_INTO_NULL	초기화하지 않은 객체 속성에 값을 할당하려고 할 경우
CASE_NOT_FOUND	어떤 CASE WHEN에도 해당하지 않고 ELSE도 작성하지 않았을 경우
COLLECTION_IS_NULL	초기화하지 않은 nested table 혹은 varray 에 컬렉션 메소드를 적용하려고 하거나 요소(element)에 값을 할당하려고 할 경우
CURSOR_ALREADY_OPEN	이미 열려있는 커서를 또 열려고 하는 경우
DUP_VAL_ON_INDEX	중복 금지(UNIQUE)인 컬럼에 중복값을 넣을 경우
INVALID_CURSOR	허용되지 않은 커서 작업 수행 시
INVALID_NUMBER	문자를 숫자로 변환 시 제대로 변환되지 않은 경우
LOGIN_DENIED	오라클에 틀린 아이디/패스워드로 로그인 시
NO_DATA_FOUND	SELECT 시 조회결과가 없을 경우

NOT_LOGGED_ON	오라클에 접속하지 않고 PL/SQL 호출 시
PROGRAM_ERROR	PL/SQL 내부적인 문제가 있을 시
ROWTYPE_MISMATCH	호스트 커서 변수, PL/SQL 커서 변수의 반환형이 호환이 되지 않을 경우
SELF_IS_NULL	프로그램이 멤버 메소드 호출 시 객체 유형의 인스턴스가 초기화되지 않았을 경우
STORAGE_ERROR	PL/SQL 수행 시 메모리가 부족하거나 손상 시
SUBSCRIPT_BEYOND_COUNT	nested table 혹은 varray 의 전체 인덱스보다 더 큰 값의 인덱스를 사용했을 경우
SUBSCRIPT_OUTSIDE_LIMIT	nested table 혹은 varray 에서 존재할 수 없는 인덱스를 사용한 경우(-1 같은.. 원래는 0부터 시작)
SYS_INVALID_ROWID	문자열을 ROWID로 변환할 수 없을 경우
TIMEOUT_ON_RESOURCE	리소스 대기시간을 초과할 경우
TOO_MANY_ROWS	SELECT INTO 시 2줄 이상을 INTO 해줄 경우
VALUE_ERROR	산술, 변환, 잘라내기, 크기 제한을 넘길 경우(컬럼 크기를 넘기거나, 숫자 컬럼에 문자를 넣는 등의..)
ZERO_DIVIDE	0으로 나누려 할 경우
