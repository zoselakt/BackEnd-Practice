--SUB QUERY
-- SQL문 안에 작성된 또다른 SQL문
-- 서브쿼리는 메인쿼리의 컬럼을 모두 사용할 수 있지만 메인쿼리는 서브쿼리의 칼럼을 사용할 수 없다.
-- 주의점
-- 1. 단일 행 또는 복수 행 비교 연산자와 함께 사용가능
-- 2. ORDER BY 사용불가
-- 3. 서브쿼리는 단일 행(Single Row) 또는 복수 행(Multiple Row) 비교 연산자와 함께 사용 가능하다. 
-- 4. 단일 행 비교 연산자는 서브쿼리의 결과가 반드시 1건 이하이어야 하고
       복수 행 비교 연산자는 서브쿼리의 결과 건수와 상관 없다.
-- 사용이 가능한곳
-- SELECT, FROM, WHERE, HAVING, ORDER BY, INSERT의 VALUES, UPDATE의 SET

-- from 절에서 사용
-- empbasics_t 테이블에서 empbasics_t가 A001인 사람중 EMPNM가 박미자인 사람
select * from
(
    select * from empbasics_t E 
    WHERE E.empcd = 'A001'
)
WHERE EMPNM = '박미자';

-- empschedule 테이블에서 month가 1인 사람중 empcd가 A001인 사람
select * from
(
    select * from empschedule where month = 1
)
where empcd = 'A001';

-- WHERE절에서 사용
-- PLAYER 테이블에서 평균 키보다 작은 선수 검색
SELECT AVG(HEIGHT) FROM PLAYER; -- 평균 값: 179.3 
SELECT * FROM PLAYER
WHERE HEIGHT < (SELECT AVG(HEIGHT)FROM PLAYER);

-- select 절에서 사용
-- PLAYER 테이블에서 전체평균 키와 포지션별 평균 키 구하기
SELECT "POSITION", AVG(HEIGHT), (SELECT AVG(HEIGHT) FROM PLAYER) FROM PLAYER
WHERE "POSITION" IS NOT NULL
GROUP BY "POSITION";
----------------------------------------------------------------------------------------------------------------
-- merge
-- merge는 병합이라는 의미를 가지고 있으며, 조건을 비교해서 
-- 테이블에 해당 조건에 맞는 데이터가 없으면 INSERT, 있으면 UPDATE를 수행하는 명령어 
-- A 테이블의 데이터를 B테이블로 옮기는 방법으로 사용된다.
/*
MERGE into 변경될테이블명 AS A
    USING 기준테이블명 AS B
    ON A.컬럼명 = B.컬럼명
    WHEN MATCHED THEN
        일치할때쿼리문
    WHEN NOT MATCHED THEN
        불일치할때쿼리문
*/

merge into board_merge bm
using board b
on (bm.cnt = b.bnum)
when matched then
update set bm.content = b.content
when not matched then
insert values(board_seq.nextval, b.title, b.writer, b.content);
/
