-- loop
-- 반복문은 특정조건까지만 반복하며 로직을 수행하는데 LOOP는 EXIT[WHEN 조건]; 에서 실행된다.
-- 이때 EXIT를 누락하면 무한루프에 빠지게 되어 주의해야한다.
-- 사용법
LOOP
처리문;
EXIT[조건];
END LOOP;

DECLARE
NUM1 NUMBER :=1;

BEGIN
    LOOP
    DBMS_OUTPUT.PUT_LINE(NUM1); --출력
    NUM1 := NUM1+1; --NUM = NUM +1
    EXIT WHEN NUM1 >10; --NUM1이 10보다 크면 LOOP종료
    END LOOP;
END;

--WHILE
--조건이 참이면 루프 명령의 반복을 실행한다. END LOOP로 루프를 탈출한다.
--사용법
WHILE 조건
LOOP
처리문;
END LOOP;

--예제
DECLARE
NUM1 NUMBER :=1;

BEGIN
    WHILE(NUM1<10) --NUM이 10보다 작을때까지 LOOP실행
    LOOP
    DBMS_OUTPUT.PUT_LINE(NUM1); --출력
    NUM1 := NUM1+1; --NUM = NUM +1
    END LOOP;
END;

-- FOR
-- 인덱스값을 DECLARE에서 선언하지 않아도 되므로 가장 반복문중에서 가장 간결하게 사용한다. 
-- 인덱스 값은 초기값에서 시작해 최종값까지 1씩 증가하게 되며 인덱스는 참조는 가능하지만 변경을 할 수 없다.
-- FOR문에 REVERSE를 명시해주면 FOR문이 거꾸로 시작한다. 

--사용법
FOR 증감변수 IN 초기값..최종값
LOOP
처리문;
END LOOP;

BEGIN
    FOR I IN 1..9
    LOOP
    DBMS_OUTPUT.PUT_LINE('안녕하세요'); --출력
    END LOOP;
END;